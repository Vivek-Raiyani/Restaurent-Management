@model IEnumerable<pizzashop.data.ViewModels.OrderApp.Waiting.WaitingTokenTable>

@foreach (var token in Model)
{
    <tr>
        <td class="tabletokenid-@token.Id">@token.Id</td>

        <td>@token.CreatedAt</td>
        <td class="live-time-update" data-time="@token.CreatedAt.ToString("o")"></td>

        <td class="tabletokenname-@token.Id">@token.Name</td>
        <td class="tabletokenpersons-@token.Id">@token.Persons</td>
        <td class="tabletokenphone-@token.Id">@token.Phone</td>
        <td class="tabletokenemail-@token.Id">@token.Email</td>

        <td class="d-flex justify-content-between">
            <button class="btn btn-outline-primary editwaitingtoken" data-id="@token.Id">
                <i class="bi bi-pencil"></i>
            </button>
            <button class="btn btn-outline-primary deletewaitingtoken" data-id="@token.Id">
                <i class="bi bi-trash3"></i>
            </button>
            <button class="btn btn-outline-primary assignwaitingtoken" data-id="@token.Id" data-floor="@token.Sectionid">
                <i class="bi bi-person-check"></i>
            </button>
        </td>
    </tr>
}


<script>
    $(document).ready(function(){

        function updateOrderTime() {

            $(".live-time-update").each(function () {

                var dateString = "";
                var time = $(this).data("time");
                if (!time) {
                    $(this).text("0 Min");
                    return;
                }
                var date1 = new Date(time);
                var date2 = new Date();
                var diff = date2.getTime() - date1.getTime();
                var days = Math.floor(diff / (1000 * 60 * 60 * 24));
                diff -= days * (1000 * 60 * 60 * 24);
                if (days > 0) {
                    dateString += days + " days ";
                }
                var hours = Math.floor(diff / (1000 * 60 * 60));
                diff -= hours * (1000 * 60 * 60);
                if (hours > 0) {
                    dateString += hours + " hours ";
                }
                var mins = Math.floor(diff / (1000 * 60));
                diff -= mins * (1000 * 60);
                if (mins > 0) {
                    dateString += mins + " min ";
                }
                var seconds = Math.floor(diff / (1000));
                diff -= seconds * (1000);
                dateString += seconds + " sec";
                $(this).text(dateString);
            });
        }
        updateOrderTime()
        setInterval(updateOrderTime, 1000);

    });

</script>
